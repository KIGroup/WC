<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="25">
<Class name="WC.Utils.TaskWDSFSync">
<Super>%SYS.Task.Definition</Super>
<TimeCreated>63427,67812.196805</TimeCreated>

<Method name="OnTask">
<Description><![CDATA[
This method is responsible for executing the task.<br>
At the scheduled time, the Task Manager creates an instance of this object,
sets any property values using the stored "settings" for the task, and then
invokes this method to execute the task.<br>
In order to execute a real task, override this method in a subclass.]]></Description>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	
	Quit $$$OK
]]></Implementation>
</Method>

<Method name="SyncCompetitions">
<Description>
do ##class(WC.Utils.TaskWDSFSync).SyncCompetitions()</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>nowSyncSinceDate:%String=""</FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	try{
		set syncCount = 0
		
		TSTART
		
		// wdsf date format: YYYY/MM/DD
		set prevSyncSinceDate = ##class(WC.Data.Settings).GetWDSFTaskLastSyncDate()
		if (nowSyncSinceDate = ""){
			set nowSyncSinceDate = $REPLACE($ZD($ZDH($REPLACE(prevSyncSinceDate, "/", ""), 15) + 1, 3), "-", "/")
		}
		
		set wdsfData = ##class(WC.Wdsf.API).GetCompetitions($REPLACE($ZD($H - 365, 3), "-", "/"), $REPLACE($ZD($H + 365, 3), "-", "/"), nowSyncSinceDate,,,,.st)
		$$$THROWONERROR(st, st)
		
		for i=1:1:wdsfData.Count(){
			set cmpId = wdsfData.GetAt(i).id 
			do ##class(WC.Data.Competition).SyncWDSF(cmpId, 0, .st)
			$$$THROWONERROR(st, st)
			
			set syncCount = syncCount + 1
		}		
		
		do ##class(WC.Data.Settings).SetWDSFTaskLastSyncDate($REPLACE($ZD($H, 3), "-", "/"))
		do ##class(WC.Utils.Journal).Create("WDSF Sync", "TaskWDSFSync.SyncCompetitions()", "Sunc count = "_syncCount)
		
		TCOMMIT
	}
	catch(ex){
		TROLLBACK
		set st = ex.AsStatus()
		do ##class(WC.Utils.Journal).Create("WDSF Sync Error", "TaskWDSFSync.SyncCompetitions()", $SYSTEM.Status.GetErrorText(st))
	}
	
	quit st
]]></Implementation>
</Method>
</Class>
</Export>
